<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BaQx/YBVbGA1AAAAAElFTkSuQmCC
</value>
  </data>
</root>